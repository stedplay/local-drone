version: '3'
services:
  drone-db:
    build: ./drone-db/
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - 3306:3306
    restart: always
    volumes:
      - ./drone-db/my.cnf:/etc/mysql/my.cnf
      - ./drone-db/entrypoint.sh:/opt/entrypoint.sh
      - ./_data/drone-db/:/var/lib/mysql/

  drone-db-backup:
    build:
      context: ./drone-db-backup/
      args:
        - TZ=${TIME_ZONE}
    depends_on:
      - drone-db
    environment:
      - MYSQL_HOST=drone-db
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - GDRIVE_ACCOUNT=${GDRIVE_ACCOUNT}
      - GDRIVE_SYNC_DST_DIR=${GDRIVE_SYNC_DST_DIR}
    restart: always
    volumes:
      - ./drone-db-backup/crontab_root:/etc/crontabs/root
      - ./drone-db-backup/script/:/opt/script/
      - ./_data/drone-db-backup/:/var/backup/

  drone-server:
    image: drone/drone:0.8-alpine
    depends_on:
      - drone-db
    environment:
      - DRONE_HOST=${LOCALTUNNEL_PROTOCOL}${LOCALTUNNEL_SUBDOMAIN}${LOCALTUNNEL_DOMAIN}
      - DRONE_OPEN=false
      - DRONE_ADMIN=${DRONE_ADMIN}
      - DRONE_SECRET=${DRONE_SECRET}
      - DRONE_GITHUB=true
      - DRONE_GITHUB_CLIENT=${DRONE_GITHUB_CLIENT}
      - DRONE_GITHUB_SECRET=${DRONE_GITHUB_SECRET}
      - DRONE_DATABASE_DRIVER=mysql
      - DRONE_DATABASE_DATASOURCE=${MYSQL_USER}:${MYSQL_PASSWORD}@tcp(drone-db:3306)/${MYSQL_DATABASE}?charset=utf8mb4
    ports:
      - ${DRONE_PORT}:8000
      - 9000:9000
    restart: always

  drone-agent:
    image: drone/agent:0.8-alpine
    depends_on:
      - drone-server
    environment:
      - DRONE_SERVER=drone-server:9000
      - DRONE_SECRET=${DRONE_SECRET}
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  localtunnel:
    build: ./localtunnel/
    command: ${DRONE_PORT} --subdomain ${LOCALTUNNEL_SUBDOMAIN}
    network_mode: host
    restart: always
